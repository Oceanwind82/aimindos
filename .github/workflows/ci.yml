name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    name: Lint • Typecheck • Build • (Optional) Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    env:
      CI: true
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_APP_NAME: 'AI Mind OS'
      SUPABASE_URL: 'http://localhost'
      SUPABASE_ANON_KEY: 'anon_key_placeholder'
      STRIPE_SECRET_KEY: 'sk_test_placeholder'
      SANITY_PROJECT_ID: 'proj_placeholder'
      SANITY_DATASET: 'production'
      SANITY_API_TOKEN: 'sanity_token_placeholder'
      TELEGRAM_BOT_TOKEN: 'telegram_token_placeholder'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Show Node & npm versions
        run: |
          node -v
          npm -v
      - name: Install deps
        run: npm ci
      - name: Write .env.local
        run: |
          cat > .env.local <<'EOF'
          NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
          SUPABASE_URL=${SUPABASE_URL}
          SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
          STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
          SANITY_PROJECT_ID=${SANITY_PROJECT_ID}
          SANITY_DATASET=${SANITY_DATASET}
          SANITY_API_TOKEN=${SANITY_API_TOKEN}
          TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
          EOF
      - name: Lint
        run: |
          if npm run | grep -qE 'lint'; then
            npm run lint
          else
            echo "No lint script defined, skipping."
          fi
      - name: Typecheck
        run: |
          if npm run | grep -qE 'typecheck|tsc'; then
            npm run typecheck || npx tsc --noEmit
          else
            echo "No typecheck/tsc script defined, running tsc fallback."
            npx tsc --noEmit || true
          fi
      - name: Build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: npm run build
      # - name: Unit tests
      #   run: |
      #     if npm run | grep -qE 'test'; then
      #       npm test -- --ci --runInBand
      #     else
      #       echo "No test script, skipping."
      #     fi
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps
      # - name: E2E tests (Playwright)
      #   run: |
      #     if npm run | grep -q 'test:e2e'; then
      #       npm run test:e2e
      #     else
      #       echo "No test:e2e script, skipping."
      #     fi
  storybook:
    if: ${{ always() }}
    name: Build Storybook
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Build Storybook (if configured)
        run: |
          if npm run | grep -qE 'build:storybook|storybook:build'; then
            npm run build:storybook || npm run storybook:build
          else
            echo "No Storybook build script, skipping."
          fi
